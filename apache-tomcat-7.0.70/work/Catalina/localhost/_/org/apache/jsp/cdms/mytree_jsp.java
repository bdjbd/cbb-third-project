/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.70
 * Generated at: 2019-01-08 06:11:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cdms;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cdms.TreeData;
import com.fastunit.Var;

public final class mytree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String orgid = request.getParameter("orgid");
	TreeData tree = new TreeData();
	String data = tree.getTreeData(orgid);
	int time = Var.getInt("refresh_time", 15000)*1000;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"initial-scale=1.0, user-scalable=no, width=device-width\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"http://cache.amap.com/lbs/static/main1119.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"http://cache.amap.com/lbs/static/main.css?v=1.0\" />\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://webapi.amap.com/maps?v=1.4.3&key=16c83a3fef165e22dfd8a9f976e880ee\"></script>\r\n");
      out.write("<script src=\"http://cache.amap.com/lbs/static/es5.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://webapi.amap.com/demos/js/liteToolbar.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap-table.min.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"./js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"./js/bootstrap-table.min.js\"></script>\r\n");
      out.write("<script src=\"./js/bootstrap-table-zh-CN.min.js\"></script>\r\n");
      out.write("<script src=\"./js/bootstrapValidator.min.js\"></script>\r\n");
      out.write("<!-- 引入样式 -->\r\n");
      out.write("\t<!-- <link rel=\"stylesheet\"\r\n");
      out.write("\t\thref=\"https://cdn.bootcss.com/element-ui/2.3.4/theme-chalk/index.css\"> -->\r\n");
      out.write("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.3.4/theme-chalk/index.css\" rel=\"stylesheet\">\t\t\r\n");
      out.write("\r\n");
      out.write("\t<!-- 先引入 Vue -->\r\n");
      out.write("\t<!-- <script src=\"https://cdn.bootcss.com/vue/2.5.16/vue.js\"></script> -->\r\n");
      out.write("\t    <script type=\"text/javascript\" src=\"./js/vue.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 引入组件库 -->\r\n");
      out.write("\t<!-- <script src=\"https://cdn.bootcss.com/element-ui/2.3.4/index.js\"></script> -->\r\n");
      out.write("<!-- \t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.3.4/index.js\"></script>\r\n");
      out.write("\t --><script type=\"text/javascript\" src=\"./js/index.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/zTree_v3/css/zTreeStyle/zTreeStyle.css\"\r\n");
      out.write("\ttype=\"text/css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/zTree_v3/js/jquery-1.4.4.min.js\"></script>\r\n");
      out.write("<!--  <script type=\"text/javascript\">  \r\n");
      out.write("            var jQuery_1_4_4 = $.noConflict(true);  \r\n");
      out.write("        </script>   -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"/zTree_v3/js/jquery.ztree.core.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/zTree_v3/js/jquery.ztree.excheck.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/zTree_v3/js/jquery.ztree.exedit.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".amap-logo {\r\n");
      out.write("\tdisplay: none !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".amap-copyright {\r\n");
      out.write("\tdisplay: none !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#container {\r\n");
      out.write("\tpadding-left: 300px;\r\n");
      out.write("\tpadding-bottom: 200px;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#left {\r\n");
      out.write("\twidth: 280px;\r\n");
      out.write("\tbackground-color: #fff;\r\n");
      out.write("\tborder-radius: 3px;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 10px;\r\n");
      out.write("\tbottom: 10px;\r\n");
      out.write("\tleft: 10px;\r\n");
      out.write("\topacity: 0.9;\r\n");
      out.write("\tfilter: alpha(opacity = 90);\r\n");
      out.write("\tbox-shadow: 0 3px 14px rgba(0, 0, 100, 0.6);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#locus {\r\n");
      out.write("\twidth: 90%;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbottom: 14px;\r\n");
      out.write("\tleft: 14px;\r\n");
      out.write("\tright: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#fence {\r\n");
      out.write("\twidth: 40%;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbottom: 5%;\r\n");
      out.write("\tleft: 55%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#bottom {\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\tbackground-color: #fff;\r\n");
      out.write("\tborder-radius: 3px;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbottom: 10px;\r\n");
      out.write("\tleft: 300px;\r\n");
      out.write("\tright: 10px;\r\n");
      out.write("\topacity: 0.9;\r\n");
      out.write("\tfilter: alpha(opacity = 90);\r\n");
      out.write("\tbox-shadow: 0 3px 14px rgba(0, 0, 100, 0.6);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group {\r\n");
      out.write("\tmargin-bottom: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#rMenu {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tvisibility: hidden;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\tbackground-color: #fff;\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("\tpadding: 6px;\r\n");
      out.write("\tborder: 1px solid #ccc;\r\n");
      out.write("\tborder-radius: 3px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#rMenu ul li {\r\n");
      out.write("\tmargin: 1px 0;\r\n");
      out.write("\tpadding: 0 5px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tlist-style: none outside none;\r\n");
      out.write("\tbackground-color: #DFDFDF;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#rMenu ul li:hover {\r\n");
      out.write("\tbackground-color: #F2F2F2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table {\r\n");
      out.write("\twidth: 2000px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"app\">\r\n");
      out.write("\t\t<div id=\"rMenu\">\r\n");
      out.write("\t\t\t<ul style=\"margin: 0; padding: 0;\">\r\n");
      out.write("\t\t\t\t<li onclick=\"gj()\">轨迹回放</li>\r\n");
      out.write("\t\t\t\t<li onClick=\"toBasicInfo()\">基础信息</li>\r\n");
      out.write("\t\t\t\t<li onClick=\"toParamsSetting()\">参数设置</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"content_wrap\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<ul id=\"treeDemo\" class=\"ztree\"></ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("    new Vue().$mount('#app');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\t<SCRIPT type=\"text/javascript\">\r\n");
      out.write("\t\tvar cph='';//车牌号(勾选使用)\r\n");
      out.write("\t\tvar cph1='';//车牌号(右键菜单传参)\r\n");
      out.write("\t\tvar orgid1='';//所选机构(右键菜单传参)\r\n");
      out.write("\t\tvar positioning = '';//需要定位的车牌号\r\n");
      out.write("\r\n");
      out.write("\t\t//zTree设置\r\n");
      out.write("\t\tvar setting = {\r\n");
      out.write("\t\t\tview: {\r\n");
      out.write("\t\t\t\tdblClickExpand: true\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcheck: {\r\n");
      out.write("\t\t\t\tenable: true\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcallback: {\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t\tonRightClick: OnRightClick,\r\n");
      out.write("\t\t\t\tonCheck: zTreeOnCheck,\r\n");
      out.write("\t\t\t\tonClick:onClick\r\n");
      out.write("            \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("        var data=");
      out.print(data);
      out.write(";\r\n");
      out.write("\t\tvar zNodes =data;\r\n");
      out.write("\r\n");
      out.write("        //节点点击事件，点击时勾选节点\r\n");
      out.write("\t\tfunction onClick(e, treeId, treeNode, clickFlag)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tpositioning='';//重置当前点击车辆\r\n");
      out.write("\t\t\t//如果未选中checked \r\n");
      out.write("\t\t\tif(treeNode.checked!==true){\r\n");
      out.write("\t\t\t\tzTree.checkNode(treeNode,!treeNode.checked, true);\r\n");
      out.write("\t\t\t\tzTreeOnCheck(event, treeId, treeNode);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t//如果已选中且当前节点是车辆，则直接定位\r\n");
      out.write("\t\t\t\tif(typeof(treeNode.ORGID) == \"undefined\"){\r\n");
      out.write("\t\t\t\t\tif(positioning !== treeNode.name){\r\n");
      out.write("\t\t\t\t\t\t//地图定位当前车辆\r\n");
      out.write("\t\t\t\t\t\tpositioning = treeNode.name;\r\n");
      out.write("\t\t\t\t\t\twindow.parent.mark = treeNode.name;\r\n");
      out.write("\t\t\t\t\t\twindow.parent.setCarLocation();\r\n");
      out.write("\t\t\t\t\t\twindow.parent.markerClick(treeNode.name);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tzTreeOnCheck(event, treeId, treeNode);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t        \r\n");
      out.write("\t\t//勾选节点事件\r\n");
      out.write("        function zTreeOnCheck(event, treeId, treeNode)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tpositioning='';//重置当前点击车辆\r\n");
      out.write("\t\t\twindow.parent.mark = '';//重置用于记住弹窗的变量，勾选和取消勾选时关闭弹窗\r\n");
      out.write("\t\t\tcph='';\r\n");
      out.write("\t\t\tvar nodes = zTree.transformToArray(zTree.getNodes()); \r\n");
      out.write("\t\t\tfor (i = 0; i < nodes.length; i++) { \r\n");
      out.write("\t\t\t\tvar checked = nodes[i].checked;\r\n");
      out.write("\t\t\t\tif(typeof(nodes[i].ORGID) == \"undefined\"){\r\n");
      out.write("\t\t\t\t\tif(checked==true){\r\n");
      out.write("\t\t\t\t\t\tcph+=\"'\"+nodes[i].name+\"',\";\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tcph=cph.replace(\"'\"+nodes[i].name+\"',\",\"\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(nodes[i].name!==''){\r\n");
      out.write("\t\t\t\t\t\t//刷新节点icon\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t   \t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t   \t\t\t\turl: \"/p2p/com.cdms.UpdateCarIcon.do?cph=\"+nodes[i].name+\"&i=\"+i,\r\n");
      out.write("\t\t\t   \t\t\t\tdataType: \"json\",\r\n");
      out.write("\t\t\t   \t\t\t\tsuccess: function(msg){\r\n");
      out.write("\t\t\t   \t\t\t\t\tnodes[msg[0].I].icon = msg[0].ICON;\r\n");
      out.write("\t\t   \t\t\t\t\t\tzTree.updateNode(nodes[msg[0].I]);\r\n");
      out.write("\t\t\t   \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t}\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t   \t\t\ttype: \"POST\",\r\n");
      out.write("\t\t   \t\t\turl: \"/p2p/com.cdms.Monitoring.do?cph=\"+cph+\"\",\r\n");
      out.write("\t\t   \t\t\tdataType: \"json\",\r\n");
      out.write("\t\t   \t\t\tsuccess: function(msg){\r\n");
      out.write("\t\t   \t\t\t\t//加载地图\r\n");
      out.write("\t\t\t \t\t\twindow.parent.loadmap(msg);\t  \r\n");
      out.write("\t\t   \t\t\t}\r\n");
      out.write("\t\t\t\t})\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction sx(){\r\n");
      out.write("\t\t\tconsole.info('刷新时间='+new Date());\r\n");
      out.write("\t\t\tcph='';\r\n");
      out.write("\t\t\tvar nodes = zTree.transformToArray(zTree.getNodes()); \r\n");
      out.write("\t\t\tfor (i = 0; i < nodes.length; i++) { \r\n");
      out.write("\t\t\t\tvar checked = nodes[i].checked;\r\n");
      out.write("\t\t\t\tif(typeof(nodes[i].ORGID) == \"undefined\"){\r\n");
      out.write("\t\t\t\t\tif(checked==true){\r\n");
      out.write("\t\t\t\t\t\tcph+=\"'\"+nodes[i].name+\"',\";\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tcph=cph.replace(\"'\"+nodes[i].name+\"',\",\"\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(nodes[i].name!==''){\r\n");
      out.write("\t\t\t\t\t\t//刷新节点icon\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t   \t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t   \t\t\t\turl: \"/p2p/com.cdms.UpdateCarIcon.do?cph=\"+nodes[i].name+\"&i=\"+i,\r\n");
      out.write("\t\t\t   \t\t\t\tdataType: \"json\",\r\n");
      out.write("\t\t\t   \t\t\t\tsuccess: function(msg){\r\n");
      out.write("\t\t\t   \t\t\t\t\tnodes[msg[0].I].icon = msg[0].ICON;\r\n");
      out.write("\t\t   \t\t\t\t\t\tzTree.updateNode(nodes[msg[0].I]);\r\n");
      out.write("\t\t\t   \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t}\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t   \t\t\ttype: \"POST\",\r\n");
      out.write("\t\t   \t\t\turl: \"/p2p/com.cdms.Monitoring.do?cph=\"+cph+\"\",\r\n");
      out.write("\t\t   \t\t\tdataType: \"json\",\r\n");
      out.write("\t\t   \t\t\tsuccess: function(msg){\r\n");
      out.write("\t\t\t \t\t\twindow.parent.loadmap(msg);\t  \r\n");
      out.write("\t\t   \t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//刷新\r\n");
      out.write("\t\tvar time = ");
      out.print(time);
      out.write(";\r\n");
      out.write("\t\tconsole.info('监控中心刷新间隔（ms）='+time);\r\n");
      out.write("\t\t$(document).ready(function (){setInterval(\"sx()\",time);});\r\n");
      out.write("\r\n");
      out.write("\t\t//查询车牌号直接勾选节点\r\n");
      out.write("        function gx(name){\r\n");
      out.write("            var node=zTree.getNodeByParam(\"name\", name)\t\t\r\n");
      out.write("\t\t\tzTree.selectNode(node);\r\n");
      out.write("\t\t\tnode.checked = true;\r\n");
      out.write("\t\t\tzTree.updateNode(node); \r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("        //zTree右键      \r\n");
      out.write("\t\tfunction OnRightClick(event, treeId, treeNode) {\r\n");
      out.write("\t\t\tconsole.log(treeNode)\r\n");
      out.write("\t\t\tif(typeof(treeNode.ORGID) !== \"undefined\"){\r\n");
      out.write("\t\t\t\torgid1=treeNode.ORGID;\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tcph1=treeNode.name;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(!treeNode && event.target.tagName.toLowerCase() != \"button\" && $(event.target).parents(\"a\").length == 0) {\r\n");
      out.write("\t\t\t\tzTree.cancelSelectedNode();\r\n");
      out.write("\t\t\t\tshowRMenu(\"root\", event.clientX, event.clientY);\r\n");
      out.write("\t\t\t}else if (treeNode && !treeNode.noR) {\r\n");
      out.write("\t\t\t\tzTree.selectNode(treeNode);\r\n");
      out.write("\t\t\t\tshowRMenu(\"node\", event.clientX, event.clientY);\r\n");
      out.write("\t\t\t}\t\r\n");
      out.write(" \t\t};\r\n");
      out.write(" \t\t//zTree显示右键菜单\r\n");
      out.write("\t\tfunction showRMenu(type, x, y) {\r\n");
      out.write("\t\t\t$(\"#rMenu ul\").show();\r\n");
      out.write("\t\t\tif (type==\"root\") {\r\n");
      out.write("\t\t\t\t$(\"#m_del\").hide();\r\n");
      out.write("\t\t\t\t$(\"#m_check\").hide();\r\n");
      out.write("\t\t\t\t$(\"#m_unCheck\").hide();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$(\"#m_del\").show();\r\n");
      out.write("\t\t\t\t$(\"#m_check\").show();\r\n");
      out.write("\t\t\t\t$(\"#m_unCheck\").show();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("            y += document.body.scrollTop;\r\n");
      out.write("            x += document.body.scrollLeft;\r\n");
      out.write("            rMenu.css({\"top\":y+\"px\", \"left\":x+\"px\", \"visibility\":\"visible\"});\r\n");
      out.write("\t\t\t$(\"body\").bind(\"mousedown\", onBodyMouseDown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//隐藏右键菜单\r\n");
      out.write("\t\tfunction hideRMenu() {\r\n");
      out.write("\t\t\tif (rMenu) rMenu.css({\"visibility\": \"hidden\"});\r\n");
      out.write("\t\t\t$(\"body\").unbind(\"mousedown\", onBodyMouseDown);//解绑右键事件\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//隐藏右键菜单\r\n");
      out.write("\t\tfunction onBodyMouseDown(event){\r\n");
      out.write("\t\t\tif (!(event.target.id == \"rMenu\" || $(event.target).parents(\"#rMenu\").length>0)) {\r\n");
      out.write("\t\t\t\trMenu.css({\"visibility\" : \"hidden\"});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//初始化zTree\r\n");
      out.write("\t\tvar zTree, rMenu;\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\t$.fn.zTree.init($(\"#treeDemo\"), setting, zNodes);\r\n");
      out.write("\t\t\tzTree = $.fn.zTree.getZTreeObj(\"treeDemo\");\r\n");
      out.write("\t\t\trMenu = $(\"#rMenu\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t    //跳转轨迹页\r\n");
      out.write("\t\tfunction gj(){\r\n");
      out.write("            window.parent.gj(cph1)\r\n");
      out.write("            rMenu.css({\"visibility\" : \"hidden\"});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//跳转基础信息\r\n");
      out.write("\t\tfunction toBasicInfo(){\r\n");
      out.write("            window.parent.toBasicInfo(cph1,orgid1);\r\n");
      out.write("            cph1='';\r\n");
      out.write("            orgid1='';\r\n");
      out.write("            rMenu.css({\"visibility\" : \"hidden\"});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//跳转参数设置\r\n");
      out.write("\t\tfunction toParamsSetting(){\r\n");
      out.write("            window.parent.toParamsSetting(cph1,orgid1);\r\n");
      out.write("            cph1='';\r\n");
      out.write("            orgid1='';\r\n");
      out.write("            rMenu.css({\"visibility\" : \"hidden\"});\r\n");
      out.write("\t\t}\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.70
 * Generated at: 2019-01-08 06:11:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cdms;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.lang.*;
import com.fastunit.Var;
import java.util.HashMap;
import com.fastunit.MapList;
import com.fastunit.Row;
import com.fastunit.jdbc.DB;
import com.am.frame.webapi.db.DBManager;
import com.fastunit.jdbc.exception.JDBCException;
import com.fastunit.util.Checker;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONArray;
import com.am.sdk.json.TableList;
import com.am.sdk.json.LoadDataToJson;
import com.fastunit.User;
import com.fastunit.util.Checker;

public final class monitoring_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   	request.setCharacterEncoding("UTF-8");

	DBManager db = new DBManager();	
	
	//获得机构Id
	String orgid=request.getParameter("orgid");
	//获得当前机构所在城市名称
    String osql="select (select proname from province where proid=ao.province),(select cityname from city where cityid=ao.city) from aorg as ao where ao.orgid='"+orgid+"'";
	MapList mapList = db.query(osql);
    String cityname=mapList.getRow(0).get("cityname");
	if(Checker.isEmpty(cityname)){
		cityname=mapList.getRow(0).get("proname");
	}

	//为联想输入准备数据
    JSONObject objectJson =null;
	JSONArray array = new JSONArray();
	JSONObject objectJson1 =new JSONObject();
    String csql="select license_plate_number from CDMS_VEHICLEBASICINFORMATION ";
	MapList mapList1 = db.query(csql);
    for(int i = 0; i < mapList1.size(); i++){		
		objectJson = new JSONObject();
		objectJson.put("title",mapList1.getRow(i).get("license_plate_number"));
		array.put(objectJson);
	}
	objectJson1.put("data",array);
    String cph_data=array.toString();

      out.write("  \r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"initial-scale=1.0, user-scalable=no, width=device-width\">\r\n");
      out.write("<title>监控中心</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"http://cache.amap.com/lbs/static/main1119.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"http://cache.amap.com/lbs/static/main.css?v=1.0\" />\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://webapi.amap.com/maps?v=1.4.3&key=16c83a3fef165e22dfd8a9f976e880ee\"></script>\r\n");
      out.write("<script src=\"http://cache.amap.com/lbs/static/es5.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://webapi.amap.com/demos/js/liteToolbar.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap-table.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/jquery.bigautocomplete.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"./js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./js/jquery.bigautocomplete.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./js/bootstrap.min.js\"></script>\r\n");
      out.write("   <script src=\"./js/bootstrap-table.min.js\"></script>  \r\n");
      out.write("<script src=\"./js/bootstrap-table-zh-CN.min.js\"></script> \r\n");
      out.write("<script src=\"./js/bootstrapValidator.min.js\"></script>\r\n");
      out.write("<!-- 引入样式 -->\r\n");
      out.write("\t<!-- <link rel=\"stylesheet\"\r\n");
      out.write("\t\thref=\"https://cdn.bootcss.com/element-ui/2.3.4/theme-chalk/index.css\"> -->\r\n");
      out.write("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.3.4/theme-chalk/index.css\" rel=\"stylesheet\">\t\t\r\n");
      out.write("\t<!-- 先引入 Vue -->\r\n");
      out.write("\t<!-- <script src=\"https://cdn.bootcss.com/vue/2.5.16/vue.js\"></script> -->\r\n");
      out.write("\t    <script type=\"text/javascript\" src=\"./js/vue.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 引入组件库 -->\r\n");
      out.write("\t<!-- <script src=\"https://cdn.bootcss.com/element-ui/2.3.4/index.js\"></script> -->\r\n");
      out.write("<!-- \t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.3.4/index.js\"></script>\r\n");
      out.write("\t --><script type=\"text/javascript\" src=\"./js/index.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/zTree_v3/css/zTreeStyle/zTreeStyle.css\"\r\n");
      out.write("\ttype=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("<!--  <script type=\"text/javascript\">  \r\n");
      out.write("            var jQuery_1_4_4 = $.noConflict(true);  \r\n");
      out.write("        </script>   -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"/zTree_v3/js/jquery.ztree.core.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"/zTree_v3/js/jquery.ztree.excheck.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/zTree_v3/js/jquery.ztree.exedit.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".alert {\r\n");
      out.write("    display: none;\r\n");
      out.write("    z-index: 99999;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    border: 1px solid transparent;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("    top: 0px;\r\n");
      out.write("    left: 0px;\r\n");
      out.write("    right: 0px;\r\n");
      out.write("    bottom: 0px;\r\n");
      out.write("    margin: auto;\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\topacity:0.9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".alert-success {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("    color: #333333;\r\n");
      out.write("    background-color: #FFFFFF;\r\n");
      out.write("    border-color: #FFFFFF;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".alert-info {\r\n");
      out.write("    color: #31708f;\r\n");
      out.write("    background-color: #d9edf7;\r\n");
      out.write("    border-color: #bce8f1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".alert-warning {\r\n");
      out.write("    color: #8a6d3b;\r\n");
      out.write("    background-color: #fcf8e3;\r\n");
      out.write("    border-color: #faebcc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".alert-danger {\r\n");
      out.write("    color: #a94442;\r\n");
      out.write("    background-color: #f2dede;\r\n");
      out.write("    border-color: #ebccd1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".amap-logo {\r\n");
      out.write("\tdisplay: none !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".amap-copyright {\r\n");
      out.write("\tdisplay: none !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#container {\r\n");
      out.write("\tpadding-left: 300px;\r\n");
      out.write("\tpadding-bottom: 200px;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#left {\r\n");
      out.write("\twidth: 280px;\r\n");
      out.write("\tbackground-color: #fff;\r\n");
      out.write("\tborder-radius: 3px;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 10px;\r\n");
      out.write("\tbottom: 10px;\r\n");
      out.write("\tleft: 10px;\r\n");
      out.write("\topacity: 0.9;\r\n");
      out.write("\tfilter: alpha(opacity = 90);\r\n");
      out.write("\tbox-shadow: 0 3px 14px rgba(0, 0, 100, 0.6);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#locus {\r\n");
      out.write("\twidth: 90%;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbottom: 14px;\r\n");
      out.write("\tleft: 14px;\r\n");
      out.write("\tright:14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#fence {\r\n");
      out.write("\twidth: 40%;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbottom: 5%;\r\n");
      out.write("\tleft: 55%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#bottom {\r\n");
      out.write("\theight: 200px;\r\n");
      out.write("\tbackground-color: #fff;\r\n");
      out.write("\tborder-radius: 3px;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbottom: 10px;\r\n");
      out.write("\tleft: 300px;\r\n");
      out.write("\tright: 10px;\r\n");
      out.write("\topacity: 0.9;\r\n");
      out.write("\tfilter: alpha(opacity = 90);\r\n");
      out.write("\tbox-shadow: 0 3px 14px rgba(0, 0, 100, 0.6);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group {\r\n");
      out.write("\tmargin-bottom: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#rMenu {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tvisibility: hidden;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\tbackground-color: #555;\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("\tpadding: 2px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#rMenu ul li {\r\n");
      out.write("\tmargin: 1px 0;\r\n");
      out.write("\tpadding: 0 5px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tlist-style: none outside none;\r\n");
      out.write("\tbackground-color: #DFDFDF;\r\n");
      out.write("}\r\n");
      out.write("#rMenu ul li:hover{\r\n");
      out.write("\tbackground-color:#F2F2F2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td{\r\n");
      out.write("     font-size: 14px;\r\n");
      out.write("       overflow: hidden;\r\n");
      out.write("    text-overflow: ellipsis;\r\n");
      out.write("    white-space: nowrap;\r\n");
      out.write("\tborder:none;\r\n");
      out.write("}\r\n");
      out.write("th{\r\n");
      out.write("     font-size: 14px;\r\n");
      out.write("     border-left: none;\r\n");
      out.write("}\r\n");
      out.write("tr{\r\n");
      out.write("    border-left: none;\r\n");
      out.write("}\r\n");
      out.write(".fixed-table-body {\r\n");
      out.write("    overflow-x: auto;\r\n");
      out.write("    overflow-y: auto;\r\n");
      out.write("    height: 75%;\r\n");
      out.write("}\r\n");
      out.write(".fixed-table-pagination .pagination-detail, .fixed-table-pagination div.pagination {\r\n");
      out.write("    margin-top: 0px;\r\n");
      out.write("    margin-bottom: 0px;\r\n");
      out.write("    display: none;\r\n");
      out.write("     height:0px\r\n");
      out.write("}\r\n");
      out.write(".fixed-table-container {\r\n");
      out.write("border:none;\r\n");
      out.write("}\r\n");
      out.write(".bootstrap-table .table thead>tr>th {\r\n");
      out.write("border-left: none;\r\n");
      out.write("}\r\n");
      out.write(".fixed-table-container tbody td {\r\n");
      out.write("    border-left: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"app\">\r\n");
      out.write("\t\t<div id=\"container\"></div>\r\n");
      out.write("\t\t<div id=\"left\" style=\"text-align: center;\">\r\n");
      out.write("\t\t\t<div id=\"procitytree\" style=\"overflow-x: hidden\">\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tstyle=\"padding: 15px; border-bottom: 1px solid #e5e5e5; min-height: 16.42857143px; font-size: 14px;\" class=\"row\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-xs-7\">\r\n");
      out.write("\t\t\t\t\t    <input type=\"text\" id=\"ba\" placeholder=\"请输入车牌号码\" style=\"width:150px;height:25px;font-size:12px;border-radius: 3px;background: #fff; border: 1px solid #dcdfe6;border-radius: 3px;padding: 0 15px;color: #606266;\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-xs-5\">\r\n");
      out.write("\t\t\t\t\t<button onclick=\"ss()\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"float: right;height:25px;font-size:15px;padding: 4px 15px;font-size: 12px;background: #fff; border: 1px solid #dcdfe6;border-radius: 3px;\"><i class=\"el-icon-search\"></i><span>搜索</span></button> \r\n");
      out.write("                     </div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"content_wrap\">\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<iframe name=\"myfram\" id=\"myfram\" style=\"height: 80%;width: 280px;border-width: 0px;\"></iframe>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"rMenu\">\r\n");
      out.write("\t\t\t\t\t<ul style=\"margin: 0;padding:0;\">\r\n");
      out.write("\t\t\t\t\t\t<li\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"location.href='locus.jsp?noCache='+Math.random()\">轨迹回放</li>\r\n");
      out.write("\t\t\t\t\t\t<li onClick=\"location.href='locus.jsp?noCache='+Math.random()\">基础信息</li>\r\n");
      out.write("\t\t\t\t\t\t<li onClick=\"location.href='locus.jsp?noCache='+Math.random()\">参数设置</li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<el-button id=\"locus\" icon=\"el-icon-location\" type=\"primary\"\r\n");
      out.write("\t\t\t\tonclick=\"gj()\">轨迹回放</el-button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"bottom\" style=\"display:none; \">\r\n");
      out.write("\t\t\t<ul id=\"myTab\" class=\"nav nav-tabs\" >\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"#location\" data-toggle=\"tab\">实时位置</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#carcondition\" data-toggle=\"tab\">车况报告</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#breakdown\" data-toggle=\"tab\">故障查看</a></li>\r\n");
      out.write("\t\t\t\t<a class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" onclick=\"gb()\" style=\"margin-right: 5px;\">x</a>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div id=\"myTabContent\" class=\"tab-content\" >\r\n");
      out.write("\t\t\t\t<div id=\"location\" class=\"tab-pane fade in active\" >\r\n");
      out.write("\t\t\r\n");
      out.write("    <table id=\"table\"></table>  \r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div id=\"carcondition\" class=\"tab-pane fade\" >\r\n");
      out.write("\t\t\t\t\t<table id=\"table1\"></table>  \r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"breakdown\" class=\"tab-pane fade\">\r\n");
      out.write("\t\t\t\t\t<table id=\"table2\"></table>  \r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        </div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tnew Vue().$mount('#app');\r\n");
      out.write("\t\r\n");
      out.write("\tvar orgid=\"");
      out.print(orgid);
      out.write("\";\r\n");
      out.write("\tconsole.info('当前机构'+orgid);\r\n");
      out.write("\t\r\n");
      out.write("\t//加载机构Tree\r\n");
      out.write("\tdocument.getElementById('myfram').src =\"/cdms/mytree.jsp?orgid=\"+orgid;\r\n");
      out.write("\r\n");
      out.write("\tvar cph_data=");
      out.print(cph_data);
      out.write("\r\n");
      out.write("\tvar scph='';//车牌号(ajax参数,拼了逗号)\r\n");
      out.write("\tvar sscph='';//车牌号(用于勾选节点)\r\n");
      out.write("\tvar mark = '';//记录表格展示的哪辆车，页面刷新后自动加载出来\r\n");
      out.write("\tvar infoWindow=new AMap.InfoWindow({offset: new AMap.Pixel(0, -30)});;//定义点击车辆图标弹框\r\n");
      out.write("\tvar infocontent = [];//弹框内容\r\n");
      out.write("\t//联想输入\r\n");
      out.write("    $(function(){\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t$(\"#ba\").bigAutocomplete({data:cph_data,callback:function(data){\r\n");
      out.write("\t\t\tscph=\"'\"+data.title+\"',\";\r\n");
      out.write("\t\t\tsscph=data.title;\t\t\r\n");
      out.write("\t\t}});\t\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t//构建地图\r\n");
      out.write("\tvar map = new AMap.Map(\"container\", {resizeEnable: true});\r\n");
      out.write("\r\n");
      out.write("\t//设置当前地图所显示的城市\r\n");
      out.write("\tvar cityname=\"");
      out.print(cityname);
      out.write("\";\r\n");
      out.write("\tmap.setCity(cityname);\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t//加载地图\r\n");
      out.write("\t//msg 车辆信息json集合\r\n");
      out.write("\tfunction loadmap(msg)\r\n");
      out.write("\t{\t\r\n");
      out.write("\t\tdocument.getElementById('bottom').style.display='none';//关闭底部table\r\n");
      out.write("\t\tmap.clearMap();// 清除地图覆盖物\t\t\r\n");
      out.write("\t\tvar iconpath;//marker图标路径\r\n");
      out.write("    \tvar iconcolor;//marker图标颜色 \r\n");
      out.write("    \tvar vehicle_state;//车辆状态\r\n");
      out.write("    \tvar direction;//方向\r\n");
      out.write("    \tvar marker;//地图标记\r\n");
      out.write("\t\tvar tips='';//弹框提醒内容\r\n");
      out.write("\t\tinfocontent=[];\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\tif(msg!==null)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t\r\n");
      out.write("    \t\tfor (var i = 0; i < msg.length; i++) \r\n");
      out.write("\t\t\t{\r\n");
      out.write("    \t\t\tif(msg[i].l[0]!=='null'&&msg[i].l[1]!=='null')\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t//获得当前车辆的状态\r\n");
      out.write("\t\t\t\t\tvehicle_state = msg[i].vehicle_state;\r\n");
      out.write("\t\t\t\t\t//获得当前车辆的方向\r\n");
      out.write("\t\t\t\t\tdirection = msg[i].direction;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t//生成图标路径\r\n");
      out.write("\t\t\t\t\tif(vehicle_state==1){//正常使用\r\n");
      out.write("\t\t\t\t\t\ticoncolor = 'green';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse if(vehicle_state==5){//停车\r\n");
      out.write("\t\t\t\t\t\ticoncolor = 'blue';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse if(vehicle_state==6){//怠速\r\n");
      out.write("\t\t\t\t\t\ticoncolor = 'orange';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse if(vehicle_state==7){//报警\r\n");
      out.write("\t\t\t\t\t\ticoncolor = 'red';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse if(vehicle_state==2||vehicle_state==3||vehicle_state==4||vehicle_state==8){//离线\r\n");
      out.write("\t\t\t\t\t\ticoncolor = 'gray';\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\ticoncolor = 'gray';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\ticonpath = '/img/'+iconcolor+'/car1.png';\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//生成车辆图标\r\n");
      out.write("\t\t\t\t\tmarker = new AMap.Marker({\r\n");
      out.write("\t\t\t\t\t\tmap: map,\r\n");
      out.write("\t\t\t\t\t\ttitle:msg[i].cph,\r\n");
      out.write("\t\t\t\t\t\tposition:msg[i].l,\r\n");
      out.write("\t\t\t\t\t\toffset: new AMap.Pixel(-15, -40),//相对于基点的位置  \r\n");
      out.write("\t\t\t\t\t\ticon:new AMap.Icon({            \r\n");
      out.write("\t\t\t\t\t\t\tsize: new AMap.Size(36, 66),\r\n");
      out.write("\t\t\t\t\t\t\timage: iconpath,\r\n");
      out.write("\t\t\t\t\t\t\timageOffset: new AMap.Pixel(0, 0)\r\n");
      out.write("\t\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\t\tangle:direction//Marker旋转角度（方向）    \r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//设置图标对应的车牌号\r\n");
      out.write("\t\t\t\t\tmarker.cph =  msg[i].cph;\r\n");
      out.write("\t\t\t\t\tmsg[i].speed = typeof(msg[i].speed) == \"undefined\"?'':msg[i].speed+' km/h';\r\n");
      out.write("\t\t\t\t\tmsg[i].mileage = typeof(msg[i].mileage) == \"undefined\"?'':msg[i].mileage+' km';\r\n");
      out.write("\t\t\t\t\tmsg[i].location = typeof(msg[i].location) == \"undefined\"?'':msg[i].location;\r\n");
      out.write("\t\t\t\t\tmsg[i].member = typeof(msg[i].member) == \"undefined\"?'':msg[i].member;\r\n");
      out.write("\t\t\t\t\tmsg[i].tel = typeof(msg[i].tel) == \"undefined\"?'':msg[i].tel;\r\n");
      out.write("\t\t\t\t\tmsg[i].positioning_time = typeof(msg[i].positioning_time) == \"undefined\"?'':msg[i].positioning_time;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar content = '<form class=\"form-horizontal\" role=\"form\" style=\"min-width: 215px;\"><b>实时位置</b>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"form-group\">'+\r\n");
      out.write("\t\t\t\t\t\t'<label class=\"col-sm-5 control-label\">车牌号</label>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"col-sm-7\"><p class=\"form-control-static\">' + msg[i].cph + '</p></div>'+\r\n");
      out.write("\t\t\t\t\t\t'</div></div></div>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"form-group\">'+\r\n");
      out.write("\t\t\t\t\t\t'<label class=\"col-sm-5 control-label\">速度</label>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"col-sm-7\"><p class=\"form-control-static\">' + msg[i].speed + '</p></div>'+\r\n");
      out.write("\t\t\t\t\t\t'</div></div></div>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"form-group\">'+\r\n");
      out.write("\t\t\t\t\t\t'<label class=\"col-sm-5 control-label\">当前里程</label>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"col-sm-7\"><p class=\"form-control-static\">' + msg[i].mileage + '</p></div>'+\r\n");
      out.write("\t\t\t\t\t\t'</div></div></div>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"form-group\">'+\r\n");
      out.write("\t\t\t\t\t\t'<label class=\"col-sm-5 control-label\">位置</label>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"col-sm-7\"><p class=\"form-control-static\">' + msg[i].location + '</p></div>'+\r\n");
      out.write("\t\t\t\t\t\t'</div></div></div>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"form-group\">'+\r\n");
      out.write("\t\t\t\t\t\t'<label class=\"col-sm-5 control-label\">是否触警</label>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"col-sm-7\"><p class=\"form-control-static\">' + msg[i].fatname + '</p></div>'+\r\n");
      out.write("\t\t\t\t\t\t'</div></div></div>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"form-group\">'+\r\n");
      out.write("\t\t\t\t\t\t'<label class=\"col-sm-5 control-label\">驾驶员姓名</label>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"col-sm-7\"><p class=\"form-control-static\">' + msg[i].member + '</p></div>'+\r\n");
      out.write("\t\t\t\t\t\t'</div></div></div>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"form-group\">'+\r\n");
      out.write("\t\t\t\t\t\t'<label class=\"col-sm-5 control-label\">驾驶员电话</label>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"col-sm-7\"><p class=\"form-control-static\">' + msg[i].tel + '</p></div>'+\r\n");
      out.write("\t\t\t\t\t\t'</div></div></div>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"form-group\">'+\r\n");
      out.write("\t\t\t\t\t\t'<label class=\"col-sm-5 control-label\">定位时间</label>'+\r\n");
      out.write("\t\t\t\t\t\t'<div class=\"col-sm-7\"><p class=\"form-control-static\">' + msg[i].positioning_time + '</p></div>'+\r\n");
      out.write("\t\t\t\t\t\t'</div></div></div></form>';\r\n");
      out.write("\t\t\t\t\tmarker.content=content;\r\n");
      out.write("\t\t\t\t\tvar markerinfo = {cph:msg[i].cph,position:msg[i].l,content:content}\r\n");
      out.write("\t\t\t\t\tinfocontent.push(markerinfo);\r\n");
      out.write("\t\t\t\t\t//Marker点击事件\r\n");
      out.write("\t\t\t\t\tAMap.event.addListener(marker, 'click',function(e){\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tmark = e.target.cph;\r\n");
      out.write("\t\t\t\t\t\tmarkerClick(e.target.cph);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\tif(mark!==''){\r\n");
      out.write("\t\t\t\t\t\t//页面刷新不关闭已打开的弹窗\r\n");
      out.write("\t\t\t\t\t\tmarkerClick(mark);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t//车辆没有坐标\r\n");
      out.write("\t\t\t\t\ttips+=msg[i].cph+',';\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(tips!==''){\r\n");
      out.write("\t\t\t\t$('<div>').appendTo('body').addClass('alert alert-success').html('以下车辆没有位置信息！<br>'+tips.substring(0,tips.length-1)).show().delay(1500).fadeOut();\r\n");
      out.write("\t\t\t\t//要不要取消勾选没有位置的车辆（将对应车牌号的节点的checked设为false，重置tips='',暂不需要修改）\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tsetCarLocation();//定位车辆\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//定位地图至mytree上点击的车辆\r\n");
      out.write("\tfunction setCarLocation()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tvar positioning = window.myfram.positioning;\r\n");
      out.write("\t\t\tif(positioning!==''){\r\n");
      out.write("\t\t\t\tfor(var j=0;j<infocontent.length;j++){\r\n");
      out.write("\t\t\t\t\tif(positioning==infocontent[j].cph){\r\n");
      out.write("\t\t\t\t\t\tmap.setZoomAndCenter(18,infocontent[j].position);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tmap.setFitView();//地图自适应显示到合适的范围\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t//marker点击事件\r\n");
      out.write("\tfunction markerClick(cph){\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#table\").bootstrapTable('destroy');\r\n");
      out.write("\t\t$(\"#table1\").bootstrapTable('destroy');\r\n");
      out.write("\t\t$(\"#table2\").bootstrapTable('destroy'); \r\n");
      out.write("\r\n");
      out.write("\t\t//加载实时位置数据\r\n");
      out.write("\t\t$('#table').bootstrapTable({  \t\t   \r\n");
      out.write("\t\t\turl: \"/p2p/com.cdms.Monitoring_ss.do?cph=\"+cph+\"\",  \r\n");
      out.write("\t\t\tqueryParamsType: '',              //默认值为 'limit' ,在默认情况下 传给服务端的参数为：offset,limit,sort              \r\n");
      out.write("\t\t\tmethod: \"post\",  \r\n");
      out.write("\t\t\tpagination: true,  \r\n");
      out.write("\t\t\tpageNumber: 1,  \r\n");
      out.write("\t\t\tpageSize: 2,  \r\n");
      out.write("\t\t\tpageList: [10, 20, 50, 100],  \r\n");
      out.write("\t\t\tsidePagination: \"server\",         //分页方式：client客户端分页，server服务端分页（*）  \r\n");
      out.write("\t\t\tstriped: true,                    //是否显示行间隔色  \r\n");
      out.write("\t\t\tcache: true, \r\n");
      out.write("\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\tuniqueId: \"id\",               //每一行的唯一标识，一般为主键列  \r\n");
      out.write("\t\t\tcolumns: [               \r\n");
      out.write("\t\t\t\t{ title: '车牌号', field: 'cph' },  \r\n");
      out.write("\t\t\t\t{ title: '机构', field: 'orgenam' },  \r\n");
      out.write("\t\t\t\t{ title: '速度km/h', field: 'speed' },  \r\n");
      out.write("\t\t\t\t{ title: '里程km', field: 'mileage' },\r\n");
      out.write("\t\t\t\t{ title: '驾驶员', field: 'member' },\r\n");
      out.write("\t\t\t\t{ title: '联系方式', field: 'tel' },\r\n");
      out.write("\t\t\t\t// { title: '油量L', field: 'oilmass' },\r\n");
      out.write("\t\t\t\t{ title: '报警', field: 'fatname' },\r\n");
      out.write("\t\t\t\t{ title: '方向', field: 'direction' },\r\n");
      out.write("\t\t\t\t{ title: '时间', field: 'positioning_time' },\r\n");
      out.write("\t\t\t\t{ title: '位置', field: 'location' },\r\n");
      out.write("\t\t\t\t{ title: '经纬度', field: 'l' },\r\n");
      out.write("\t\t\t],\r\n");
      out.write("\t\t\tresponseHandler: function(res) {\r\n");
      out.write("\t\t\t\tconsole.log(res)\r\n");
      out.write("\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\"total\": res.total,//总页数\r\n");
      out.write("\t\t\t\t\t\"rows\": res.rows   //数据\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t//加载车况报告数据\r\n");
      out.write("\t\t$('#table1').bootstrapTable({  \t\t   \r\n");
      out.write("\t\t\turl: \"/p2p/com.cdms.Monitoring_ss.do?cph=\"+cph+\"\",  \r\n");
      out.write("\t\t\tqueryParamsType: '',              //默认值为 'limit' ,在默认情况下 传给服务端的参数为：offset,limit,sort              \r\n");
      out.write("\t\t\tmethod: \"post\",  \r\n");
      out.write("\t\t\tpagination: true,  \r\n");
      out.write("\t\t\tpageNumber: 1,  \r\n");
      out.write("\t\t\tpageSize: 2,  \r\n");
      out.write("\t\t\tpageList: [10, 20, 50, 100],  \r\n");
      out.write("\t\t\tsidePagination: \"server\",         //分页方式：client客户端分页，server服务端分页（*）  \r\n");
      out.write("\t\t\tstriped: true,                    //是否显示行间隔色  \r\n");
      out.write("\t\t\tcache: true, \r\n");
      out.write("\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\tuniqueId: \"id\",               //每一行的唯一标识，一般为主键列  \r\n");
      out.write("\t\t\tpaginationPreText: \"上一页\",  \r\n");
      out.write("\t\t\tpaginationNextText: \"下一页\",  \r\n");
      out.write("\t\t\tcolumns: [               \r\n");
      out.write("\t\t\t\t{ title: '电频电压\\r(V)', field: 'battery_voltage' },  \r\n");
      out.write("\t\t\t\t{ title: '发动机转速\\r(rpm)', field: 'engine_speed' },  \r\n");
      out.write("\t\t\t\t{ title: '行驶车速km/h', field: 'driving_speed' },  \r\n");
      out.write("\t\t\t\t{ title: '节气门开度\\r(%)', field: 'throttle_opening' },\r\n");
      out.write("\t\t\t\t{ title: '发动机负荷\\r(%)', field: 'engine_load' },\r\n");
      out.write("\t\t\t\t{ title: '冷却液温度\\r(℃)', field: 'coolant_temperature' },\r\n");
      out.write("\t\t\t\t{ title: '瞬时油耗\\r(L/100km)', field: 'instantaneous_fuel_consumption' },\r\n");
      out.write("\t\t\t\t{ title: '本次行驶里程\\r(km)', field: 'travel_mileage' },\r\n");
      out.write("\t\t\t\t{ title: '总里程\\r(km)', field: 'total_mileage' },\t\t\t\t\r\n");
      out.write("\t\t\t\t{ title: '本次耗油量\\r(L)', field: 'fuel_consumption' },\r\n");
      out.write("\t\t\t\t{ title: '累计耗油量\\r(L)', field: 'accumulative_oil_consumption' },\r\n");
      out.write("\t\t\t],\r\n");
      out.write("\t\t\tresponseHandler: function(res) {\r\n");
      out.write("\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\"total\": res.total,//总页数\r\n");
      out.write("\t\t\t\t\t\"rows\": res.rows   //数据\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t//加载故障数据        \r\n");
      out.write("\t\t$('#table2').bootstrapTable({  \t\t   \r\n");
      out.write("\t\t\turl: \"/p2p/com.cdms.Monitoring_gz.do?cph=\"+cph+\"\",  \r\n");
      out.write("\t\t\tqueryParamsType: '',              //默认值为 'limit' ,在默认情况下 传给服务端的参数为：offset,limit,sort              \r\n");
      out.write("\t\t\tmethod: \"post\",  \r\n");
      out.write("\t\t\tpagination: true,  \r\n");
      out.write("\t\t\tpageNumber: 1,  \r\n");
      out.write("\t\t\tpageSize: 2,  \r\n");
      out.write("\t\t\tpageList: [10, 20, 50, 100],  \r\n");
      out.write("\t\t\tsidePagination: \"server\",         //分页方式：client客户端分页，server服务端分页（*）  \r\n");
      out.write("\t\t\tstriped: true,                    //是否显示行间隔色  \r\n");
      out.write("\t\t\tcache: true, \r\n");
      out.write("\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\tuniqueId: \"id\",               //每一行的唯一标识，一般为主键列  \r\n");
      out.write("\t\t\tpaginationPreText: \"上一页\",  \r\n");
      out.write("\t\t\tpaginationNextText: \"下一页\",  \r\n");
      out.write("\t\t\tcolumns: [               \r\n");
      out.write("\t\t\t\t{ title: '故障码', field: 'alarm_code' },  \r\n");
      out.write("\t\t\t\t{ title: '故障名', field: 'fatname' },  \r\n");
      out.write("\t\t\t\t{ title: '故障时间', field: 'alarm_time' }    \r\n");
      out.write("\t\t\t],\r\n");
      out.write("\t\t\tresponseHandler: function(res) {\r\n");
      out.write("\t\t\t\tconsole.log(res)\r\n");
      out.write("\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\"total\": res.total,//总页数\r\n");
      out.write("\t\t\t\t\t\"rows\": res.rows   //数据\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tfor(var j=0;j<infocontent.length;j++){\r\n");
      out.write("\t\t\tif(cph==infocontent[j].cph){\r\n");
      out.write("\t\t\t\t//设置窗体的显示内容\r\n");
      out.write("\t\t\t\tinfoWindow.setContent(infocontent[j].content);\r\n");
      out.write("\t\t\t\t//设置在地图上打开窗体的位置\r\n");
      out.write("\t\t\t\tinfoWindow.open(map, infocontent[j].position);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//设置底部表格显示状态=显示\r\n");
      out.write("\t\tdocument.getElementById(\"bottom\").style.display=\"block\";\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//搜索车牌号\r\n");
      out.write("\tfunction ss()\r\n");
      out.write("\t{\r\n");
      out.write("\t\twindow.myfram.gx(sscph);\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t   \turl: \"/p2p/com.cdms.Monitoring.do?cph=\"+scph+\"\",\r\n");
      out.write("\t\t   \tdataType: \"json\",\r\n");
      out.write("\t\t   \tsuccess: function(msg){\r\n");
      out.write("\t\t\t\tloadmap(msg);\r\n");
      out.write("\t\t   \t}\r\n");
      out.write("\t\t})\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//跳转至轨迹\r\n");
      out.write("    function gj(cph1){\r\n");
      out.write("\t\tvar params = '';\r\n");
      out.write("\t\tif(typeof(cph1)==\"undefined\"){\r\n");
      out.write("\t\t\twindow.open(\"locus.jsp?orgid=\"+orgid+\"\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\twindow.open(\"locus.jsp?cph=\"+cph1+\"&orgid=\"+orgid+\"\");\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//基本信息\r\n");
      out.write("    function toBasicInfo(cph1,orgid1)\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif(orgid1===''){\r\n");
      out.write("\t\t\twindow.open(\"cdms_vehiclebasicinformation.do?name=基础信息&cph=\"+cph1+\"&clear=cdms.cdms_vehiclebasicinformation.query\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\twindow.open(\"cdms_vehiclebasicinformation.do?name=基础信息&orgid=\"+orgid1+\"&clear=cdms.cdms_vehiclebasicinformation.query\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//参数设置\r\n");
      out.write("    function toParamsSetting(cph1,orgid1)\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif(orgid1===''){\r\n");
      out.write("\t\t\twindow.open(\"cdms_vehiclebasicinformationpar.do?name=参数设置&cph=\"+cph1+\"\");\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\twindow.open(\"cdms_vehiclebasicinformationpar.do?name=参数设置&orgid=\"+orgid1+\"\");\t\r\n");
      out.write("\t\t}\r\n");
      out.write("        \r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//关闭底栏\r\n");
      out.write("\tfunction gb() {\r\n");
      out.write("\t\tmark='';\r\n");
      out.write("\t\tdocument.getElementById('bottom').style.display='none'\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("  ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
